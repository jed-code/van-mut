"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./lib/useFetch.js":
/*!*************************!*\
  !*** ./lib/useFetch.js ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFetch: function() { return /* binding */ useFetch; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/react-query/build/modern/index.js\");\n/* harmony import */ var _sanity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sanity */ \"./lib/sanity.js\");\nvar _s = $RefreshSig$();\n\n\n// Generic hook to fetch data based on a given query\n// export const useFetch = (queryKey, query) => {\n//   const fetchData = async () => {\n//     const data = await client.fetch(query);\n//     return data;\n//   };\n//   return useQuery(queryKey, fetchData);\n// };\nconst useFetch = (queryKey, query)=>{\n    _s();\n    const fetchProperties = async ()=>{\n        const data = await _sanity__WEBPACK_IMPORTED_MODULE_0__.client.fetch(query);\n        return data;\n    };\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey,\n        queryFn: fetchProperties\n    });\n};\n_s(useFetch, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvdXNlRmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRDtBQUNmO0FBRWxDLG9EQUFvRDtBQUVwRCxpREFBaUQ7QUFDakQsb0NBQW9DO0FBQ3BDLDhDQUE4QztBQUM5QyxtQkFBbUI7QUFDbkIsT0FBTztBQUVQLDBDQUEwQztBQUMxQyxLQUFLO0FBRUUsTUFBTUUsV0FBVyxDQUFDQyxVQUFVQzs7SUFDakMsTUFBTUMsa0JBQWtCO1FBQ3RCLE1BQU1DLE9BQU8sTUFBTUwsMkNBQU1BLENBQUNNLEtBQUssQ0FBQ0g7UUFDaEMsT0FBT0U7SUFDVDtJQUVBLE9BQU9OLCtEQUFRQSxDQUFDO1FBQ2RHO1FBQ0FLLFNBQVNIO0lBQ1g7QUFDRixFQUFFO0dBVldIOztRQU1KRiwyREFBUUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3VzZUZldGNoLmpzPzI0NzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCI7XHJcbmltcG9ydCB7IGNsaWVudCB9IGZyb20gXCIuL3Nhbml0eVwiO1xyXG5cclxuLy8gR2VuZXJpYyBob29rIHRvIGZldGNoIGRhdGEgYmFzZWQgb24gYSBnaXZlbiBxdWVyeVxyXG5cclxuLy8gZXhwb3J0IGNvbnN0IHVzZUZldGNoID0gKHF1ZXJ5S2V5LCBxdWVyeSkgPT4ge1xyXG4vLyAgIGNvbnN0IGZldGNoRGF0YSA9IGFzeW5jICgpID0+IHtcclxuLy8gICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjbGllbnQuZmV0Y2gocXVlcnkpO1xyXG4vLyAgICAgcmV0dXJuIGRhdGE7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgcmV0dXJuIHVzZVF1ZXJ5KHF1ZXJ5S2V5LCBmZXRjaERhdGEpO1xyXG4vLyB9O1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUZldGNoID0gKHF1ZXJ5S2V5LCBxdWVyeSkgPT4ge1xyXG4gIGNvbnN0IGZldGNoUHJvcGVydGllcyA9IGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjbGllbnQuZmV0Y2gocXVlcnkpO1xyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHVzZVF1ZXJ5KHtcclxuICAgIHF1ZXJ5S2V5LCAvLyBhcnJheSByZXByZXNlbnRpbmcgdGhlIHF1ZXJ5IGtleVxyXG4gICAgcXVlcnlGbjogZmV0Y2hQcm9wZXJ0aWVzLCAvLyBmdW5jdGlvbiB0byBmZXRjaCBkYXRhXHJcbiAgfSk7XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJ1c2VRdWVyeSIsImNsaWVudCIsInVzZUZldGNoIiwicXVlcnlLZXkiLCJxdWVyeSIsImZldGNoUHJvcGVydGllcyIsImRhdGEiLCJmZXRjaCIsInF1ZXJ5Rm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/useFetch.js\n"));

/***/ })

});